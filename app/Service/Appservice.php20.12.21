<?php
namespace App\Service;
use Illuminate\Support\Facades\Auth;
use Illuminate\Http\Request;
use App\User;
use App\Model\Menu_permission;
use App\Model\Menu;
use App\Model\Generalsetting;
use App\Model\Generalsocial;
use App\Model\User_menu;
use App\Model\Comment;
use App\Model\Reply;
use App\Model\Group;
use App\Model\Notification;

class Appservice
{
	public function __construct() {
        
    }
	public function checkpermission($menu_id,$user_id)
	{
		$check=Menu_permission::where(['menu_id'=>$menu_id,'user_id'=>$user_id])->first();
		return $check;
	}
    public function getsetting($name)
    {
		$value=Generalsetting::where(['name'=>$name])->first();
		return $value->value;
    }
	public function getComment($id)
	{
		$com=Comment::where(['social_id'=>$id])->orderBy('id','desc')->get();
		if(count($com)!=0)
		{
			return $com;
		}else{
			return $com=[];
		}
	}
	public function getReply($id)
	{
		$com=Reply::where(['comment_id'=>$id])->orderBy('id','desc')->take(3)->get();
		if(count($com)!=0)
		{
			return $com;
		}else{
			return $com=[];
		}
	}
	public function checkListaccess($route_name)
	{
		$menu = Menu::select()->where(['route_name' => $route_name])->first();
		$pre=Menu_permission::where(['menu_id'=>$menu->id,'user_id'=>Auth::id(),'list_access'=>'Y']);
		if($pre->count()!=0)
		{
			return true;  
		}
	}
	public function checkAddaccess($route_name)
	{
		$menu = Menu::select()->where(['route_name' => $route_name])->first();
		$pre=Menu_permission::where(['menu_id'=>$menu->id,'user_id'=>Auth::id(),'add_access'=>'Y']);
		if($pre->count()!=0)
		{
			return true;  
		}
	}
	public function checkEditaccess($route_name)
	{
		$menu = Menu::select()->where(['route_name' => $route_name])->first();
		$pre=Menu_permission::where(['menu_id'=>$menu->id,'user_id'=>Auth::id(),'edit_access'=>'Y']);
		if($pre->count()!=0)
		{
			return true;  
		}
	}
	public function checkDeleteaccess($route_name)
	{
		$menu = Menu::select()->where(['route_name' => $route_name])->first();
		$pre=Menu_permission::where(['menu_id'=>$menu->id,'user_id'=>Auth::id(),'delete_access'=>'Y']);
		if($pre->count()!=0)
		{
			return true;  
		}
	}
	public function canAccess($route_name)
	{
		$check=User_menu::where(['user_id'=>Auth::id(),'route'=>$route_name]);
		if($check->count()!=0)
		{
			return true;  
		}else{
			return false;
		}
	}
	public function get_group(){
		$group = Group::select('id','group_name')->get();
		return $group;
	}
	public function create_notification($user_id,$details){
		date_default_timezone_set('Asia/Kolkata');
		$currentTime = date( 'Y-m-d H:i:s');
		$comm = Notification::create([
				'user_id'=>$user_id,
				'details'=>$details,
				'created_at'=>$currentTime,
				'updated_at'=>$currentTime
		]);
		$comm->save();
		return true;
	}
	public function get_notification(){
		$comm = Notification::get();
		foreach($comm as $k=>$v){
			$user = User::select('name','image')->where('id',$v->user_id)->first();
			$comm[$k]->user = $user;
		}
		return $comm;
	}
}